#include "get_next_line.h"
#include "libft.h"
#include <fcntl.h>
#include <stdio.h>

int main(int argc, char **argv)
{
	char	*line;
	int		ret;
	int		i;
	int		num_lines;
	int		fd;

	line = NULL;
	fd = open("8_chars.txt", O_RDONLY);
	int		fd2;
	fd2 = open("16_chars.txt", O_RDONLY);

	// for (size_t i = 0; i < 4; i++)
	// {
	// 	ret = get_next_line(fd, &line);
	// 	printf("(%d)|%s|\n\n", ret, line);
	// 	ft_strdel(&line);
	// }
	// for (size_t i = 0; i < 4; i++)
	// {
	// 	ret = get_next_line(fd2, &line);
	// 	printf("(%d)|%s|\n\n", ret, line);
	// 	ft_strdel(&line);
	// }

	ret = get_next_line(fd, &line);
	printf("(%d)|%s|\n\n", ret, line);
	ft_strdel(&line);

	ret = get_next_line(fd2, &line);
	printf("(%d)|%s|\n\n", ret, line);
	ft_strdel(&line);

	ret = get_next_line(fd, &line);
	printf("(%d)|%s|\n\n", ret, line);
	ft_strdel(&line);

	ret = get_next_line(fd2, &line);
	printf("(%d)|%s|\n\n", ret, line);
	ft_strdel(&line);
	close(fd);
	close(fd2);
system("leaks test_gnl");
	return (0);

	// printf("ret: %d\n", get_next_line(-99, NULL));
	// printf("ret: %d\n", get_next_line(-1, NULL));
	// printf("ret: %d\n", get_next_line(-10000, NULL));

	// printf("ret: %d\n", get_next_line(1, NULL)); // fildes 1 is stdout
	// printf("ret: %d\n", get_next_line(2, NULL)); // fildes 2 is stderr
	// printf("ret: %d\n", get_next_line(99, NULL));

	// printf("ret: %d\n", get_next_line(-99, &line));
	// printf("ret: %d\n", get_next_line(-1, &line));
	// printf("ret: %d\n", get_next_line(-10000, &line));
	// return (0);

	num_lines = 3; // Control # of calls
	if (argc > 2)
		ft_putendl("Too many arguments.");
	else if (argc == 2)
	{
		fd = open(argv[1], O_RDONLY);
		// printf("FD: |%d|\n", fd);
		i = 1;
		while (i++ <= num_lines)
		{
			ret = get_next_line(fd, &line);
			if (ret == -1)
				ft_putendl("* Error while reading!");
			else if (ret == 0)
				ft_putendl("* End of file.");
			else if (ret == 1)
				ft_putendl(line);
			ft_strdel(&line);
		}
		// printf("ret: %d\n", ret);
		close(fd);
	}
	else if (argc == 1)
	{
		fd = 0;		// read from stdin file descriptor
		// printf("FD: |%d|\n", fd);
		i = 1;
		while (i++ <= num_lines)
		{
			ret = get_next_line(fd, &line);
			if (ret == -1)
				ft_putendl("* Error while reading!");
			else if (ret == 0)
				ft_putendl("* End of file.");
			else if (ret == 1)
				ft_putendl(line);
			ft_strdel(&line);
		}
		// printf("ret: %d\n", ret);
		close(fd);
	}
	return (0);
}
/*
**	For really big files (the bible), use the following commands:
**		$ ./test_gnl bible.txt > my_bible.txt
**		$ diff <(head -n 42 bible.txt) <(head -n 42 my_bible.txt)
*/
/* vi: filetype=c */